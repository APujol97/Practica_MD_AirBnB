knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(naniar)
#listing.csv
listingsMallorca <- read_csv("data/Mallorca/listings.csv.gz")
listingsBarcelona <- read_csv("data/Barcelona/listings.csv.gz")
listingsValencia<- read_csv("data/Valencia/listings.csv.gz")
listingsMexico<- read_csv("data/Mexico/listings.csv.gz")
listingsBuenosAires<- read_csv("data/Buenos_Aires/listings.csv.gz")
selectedColumns <- c("id","host_response_time","host_response_rate","host_acceptance_rate","host_is_superhost","host_verifications","host_has_profile_pic","host_identity_verified","instant_bookable","number_of_reviews","number_of_reviews_ltm","number_of_reviews_l30d","review_scores_rating","review_scores_value","reviews_per_month","room_type","neighbourhood_cleansed","accommodates","bathrooms_text","bedrooms","beds","host_since","first_review","last_review","amenities","price")
clistingsMallorca <- listingsMallorca[selectedColumns]
clistingsBarcelona <- listingsBarcelona[selectedColumns]
clistingsValencia <- listingsValencia[selectedColumns]
clistingsMexico <- listingsMexico[selectedColumns]
clistingsBuenosAires <- listingsBuenosAires[selectedColumns]
dfMallorca <- cbind(clistingsMallorca,Ciudad=c("Mallorca"))
dfBarcelona <- cbind(clistingsBarcelona,Ciudad=c("Barcelona"))
dfValencia <- cbind(clistingsValencia,Ciudad=c("Valencia"))
dfMexico <- cbind(clistingsMexico,Ciudad=c("Mexico"))
dfBuenosAires <- cbind(clistingsBuenosAires,Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
listing <- rbind(dfMallorca, dfBarcelona, dfValencia, dfMexico, dfBuenosAires)
#Guardamos los nuevos datos
write_csv(x = listing, "data/listingsCiudades.csv")
#reviews.csv
reviewsMallorca <- cbind(read_csv("data/Mallorca/reviews.csv.gz"), Ciudad=c("Mallorca"))
reviewsBarcelona <- cbind(read_csv("data/Barcelona/reviews.csv.gz"), Ciudad=c("Barcelona"))
reviewsValencia <- cbind(read_csv("data/Valencia/reviews.csv.gz"), Ciudad=c("Valencia"))
reviewsMexico <- cbind(read_csv("data/Mexico/reviews.csv.gz"), Ciudad=c("Mexico"))
reviewsBuenosAires <- cbind(read_csv("data/Buenos_Aires/reviews.csv.gz"), Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
reviews <- rbind(reviewsMallorca, reviewsBarcelona, reviewsValencia, reviewsMexico, reviewsBuenosAires)
#Guardamos los nuevos datos
write_csv(x = reviews, "data/reviewsCiudades.csv")
#calendar.csv
#...
#Posibles maneras de escribir N/A
na_strings <- c("NA", "N A", "N / A", "N/A", "N/ A", "Not Available", "NOt available")
#Recuperamos convirtiendo las posibles combinaciones N/A a NA's
listingNAs <- read_csv("data/listingsCiudades.csv", na = na_strings)
#Eliminamos las filas que tienen NAs
listingNoNAs <- na.omit(listingNAs)
#Pos si queremos contar quantos NAs hay o la media
nascantidad <- apply(X = is.na(listingNAs), MARGIN = 1, FUN = sum)
#Añadimos una nueva columna con la cantidad total de NAs en cada fila
listingNAs <- cbind(listingNAs,nascantidad)
#Ahora podemos elegir dejar las filas que tengan un número de NAs segun la condición siguiente (ahora < 3)
listings <- listingNAs[listingNAs$nascantidad < 6,]
#categorizado de cadenas de caracteres
listings$neighbourhood_cleansed<-as.factor(listings$neighbourhood_cleansed)
listings$room_type = gsub("Entire home/apt", "1", listings$room_type)
listings$room_type = gsub("Private room", "2", listings$room_type)
listings$room_type = gsub("Hotel room", "3", listings$room_type)
listings$room_type = gsub("Shared room", "4", listings$room_type)
listings$room_type = as.numeric(listings$room_type)
listings$host_response_time = gsub("within an hour", "1", listings$host_response_time)
listings$host_response_time = gsub("within a day", "24", listings$host_response_time)
listings$host_response_time = gsub("within a few hours", "6", listings$host_response_time)
listings$host_response_time = gsub("a few days or more", "72", listings$host_response_time)
listings$host_response_time = as.numeric(listings$host_response_time)
#impiado de texto y pasado a int
listings$bathrooms_text<-sub("bath","",listings$bathrooms_text)
listings$bathrooms_text<-sub("private","",listings$bathrooms_text)
listings$bathrooms_text<-sub("shared","",listings$bathrooms_text)
listings$bathrooms_text<-as.numeric(sub("s","",listings$bathrooms_text))
listings$price = gsub("\\,", "", listings$price)
listings$price = as.numeric(gsub("\\$", "", listings$price))
listings$host_response_rate = gsub("\\,", "", listings$host_response_rate)
listings$host_response_rate = as.numeric(gsub("\\%", "", listings$host_response_rate))
listings$host_acceptance_rate = gsub("\\,", "", listings$host_acceptance_rate)
listings$host_acceptance_rate = as.numeric(gsub("\\%", "", listings$host_acceptance_rate))
listings$host_since <- as.Date(listings$host_since)
listings$first_review <- as.Date(listings$first_review)
listings$last_review <- as.Date(listings$last_review)
library('plyr')
library('dplyr')
host_verifications<- strsplit(listings$host_verifications,"', '")
binary <- lapply(host_verifications, function(x) {
vals <- unique(x)
x <- setNames(rep(1,length(vals)), vals);
do.call(data.frame, as.list(x))
})
# Unión de variables como columnas en un solo data.frame
result <- do.call(rbind.fill, binary)
result[is.na(result)] <- 0
listingsNoLists <- cbind(listings,result)
listingsNoLists$host_verifications <- NULL
setnames(listing, "X..email", "email")
library('plyr')
library('dplyr')
host_verifications<- strsplit(listings$host_verifications,"', '")
binary <- lapply(host_verifications, function(x) {
vals <- unique(x)
x <- setNames(rep(1,length(vals)), vals);
do.call(data.frame, as.list(x))
})
# Unión de variables como columnas en un solo data.frame
result <- do.call(rbind.fill, binary)
result[is.na(result)] <- 0
listingsNoLists <- cbind(listings,result)
listingsNoLists$host_verifications <- NULL
setnames(listingsNoLists, "X..email", "email")
str(listingsNoLists)
setnames(listingsNoLists, "X..email", "email")
str(listingsNoLists)
setnames(listingsNoLists, "X..email", "email")
library(stats)
setnames(listingsNoLists, "X..email", "email")
library("data.table")
setnames(listingsNoLists, "X..email", "email")
library('plyr')
library('dplyr')
library("data.table")
host_verifications<- strsplit(listings$host_verifications,"', '")
binary <- lapply(host_verifications, function(x) {
vals <- unique(x)
x <- setNames(rep(1,length(vals)), vals);
do.call(data.frame, as.list(x))
})
# Unión de variables como columnas en un solo data.frame
result <- do.call(rbind.fill, binary)
result[is.na(result)] <- 0
listingsNoLists <- cbind(listings,result)
listingsNoLists$host_verifications <- NULL
str(listingsNoLists)
setnames(listingsNoLists, "X..email", "email")
setnames(listingsNoLists, "government_id..", "government_id")
setnames(listingsNoLists, "identity_manual..", "identity_manual")
setnames(listingsNoLists, "reviews..", "reviews")
setnames(listingsNoLists, "work_email..", "work_email")
setnames(listingsNoLists, "email", "X..email..")
listingsNoLists$X..phone <- NULL
listingsNoLists$X..phone.. <- NULL
listingsNoLists$phone.. <- NULL
listingsNoLists$manual_offline.. <- NULL
listingsNoLists$X..reviews.. <- NULL
listingsNoLists$X..identity_manual.. <- NULL
listingsNoLists$X..jumio <- NULL
listingsNoLists$photographer.. <- NULL
listingsNoLists$X..offline_government_id <- NULL
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(naniar)
#listing.csv
listingsMallorca <- read_csv("data/Mallorca/listings.csv.gz")
listingsBarcelona <- read_csv("data/Barcelona/listings.csv.gz")
listingsValencia<- read_csv("data/Valencia/listings.csv.gz")
listingsMexico<- read_csv("data/Mexico/listings.csv.gz")
listingsBuenosAires<- read_csv("data/Buenos_Aires/listings.csv.gz")
selectedColumns <- c("id","host_response_time","host_response_rate","host_acceptance_rate","host_is_superhost","host_verifications","host_has_profile_pic","host_identity_verified","instant_bookable","number_of_reviews","number_of_reviews_ltm","number_of_reviews_l30d","review_scores_rating","review_scores_value","reviews_per_month","room_type","neighbourhood_cleansed","accommodates","bathrooms_text","bedrooms","beds","host_since","first_review","last_review","amenities","price")
clistingsMallorca <- listingsMallorca[selectedColumns]
clistingsBarcelona <- listingsBarcelona[selectedColumns]
clistingsValencia <- listingsValencia[selectedColumns]
clistingsMexico <- listingsMexico[selectedColumns]
clistingsBuenosAires <- listingsBuenosAires[selectedColumns]
dfMallorca <- cbind(clistingsMallorca,Ciudad=c("Mallorca"))
dfBarcelona <- cbind(clistingsBarcelona,Ciudad=c("Barcelona"))
dfValencia <- cbind(clistingsValencia,Ciudad=c("Valencia"))
dfMexico <- cbind(clistingsMexico,Ciudad=c("Mexico"))
dfBuenosAires <- cbind(clistingsBuenosAires,Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
listing <- rbind(dfMallorca, dfBarcelona, dfValencia, dfMexico, dfBuenosAires)
#Guardamos los nuevos datos
write_csv(x = listing, "data/listingsCiudades.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(naniar)
#listing.csv
listingsMallorca <- read_csv("data/Mallorca/listings.csv.gz")
listingsBarcelona <- read_csv("data/Barcelona/listings.csv.gz")
listingsValencia<- read_csv("data/Valencia/listings.csv.gz")
listingsMexico<- read_csv("data/Mexico/listings.csv.gz")
listingsBuenosAires<- read_csv("data/Buenos_Aires/listings.csv.gz")
selectedColumns <- c("id","host_response_time","host_response_rate","host_acceptance_rate","host_is_superhost","host_verifications","host_has_profile_pic","host_identity_verified","instant_bookable","number_of_reviews","number_of_reviews_ltm","number_of_reviews_l30d","review_scores_rating","review_scores_value","reviews_per_month","room_type","neighbourhood_cleansed","accommodates","bathrooms_text","bedrooms","beds","host_since","first_review","last_review","amenities","price")
clistingsMallorca <- listingsMallorca[selectedColumns]
clistingsBarcelona <- listingsBarcelona[selectedColumns]
clistingsValencia <- listingsValencia[selectedColumns]
clistingsMexico <- listingsMexico[selectedColumns]
clistingsBuenosAires <- listingsBuenosAires[selectedColumns]
dfMallorca <- cbind(clistingsMallorca,Ciudad=c("Mallorca"))
dfBarcelona <- cbind(clistingsBarcelona,Ciudad=c("Barcelona"))
dfValencia <- cbind(clistingsValencia,Ciudad=c("Valencia"))
dfMexico <- cbind(clistingsMexico,Ciudad=c("Mexico"))
dfBuenosAires <- cbind(clistingsBuenosAires,Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
listing <- rbind(dfMallorca, dfBarcelona, dfValencia, dfMexico, dfBuenosAires)
#Guardamos los nuevos datos
write_csv(x = listing, "data/listingsCiudades.csv")
knitr::opts_chunk$set(echo = TRUE)
listings <- read_csv("data/listingsCiudadesLimpio.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(naniar)
#listing.csv
listingsMallorca <- read_csv("data/Mallorca/listings.csv.gz")
listingsBarcelona <- read_csv("data/Barcelona/listings.csv.gz")
listingsValencia<- read_csv("data/Valencia/listings.csv.gz")
listingsMexico<- read_csv("data/Mexico/listings.csv.gz")
listingsBuenosAires<- read_csv("data/Buenos_Aires/listings.csv.gz")
selectedColumns <- c("id","host_response_time","host_response_rate","host_acceptance_rate","host_is_superhost","host_verifications","host_has_profile_pic","host_identity_verified","instant_bookable","number_of_reviews","number_of_reviews_ltm","number_of_reviews_l30d","review_scores_rating","review_scores_value","reviews_per_month","room_type","neighbourhood_cleansed","accommodates","bathrooms_text","bedrooms","beds","host_since","first_review","last_review","amenities","price")
clistingsMallorca <- listingsMallorca[selectedColumns]
clistingsBarcelona <- listingsBarcelona[selectedColumns]
clistingsValencia <- listingsValencia[selectedColumns]
clistingsMexico <- listingsMexico[selectedColumns]
clistingsBuenosAires <- listingsBuenosAires[selectedColumns]
dfMallorca <- cbind(clistingsMallorca,Ciudad=c("Mallorca"))
dfBarcelona <- cbind(clistingsBarcelona,Ciudad=c("Barcelona"))
dfValencia <- cbind(clistingsValencia,Ciudad=c("Valencia"))
dfMexico <- cbind(clistingsMexico,Ciudad=c("Mexico"))
dfBuenosAires <- cbind(clistingsBuenosAires,Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
listing <- rbind(dfMallorca, dfBarcelona, dfValencia, dfMexico, dfBuenosAires)
#Guardamos los nuevos datos
write_csv(x = listing, "data/listingsCiudades.csv")
#reviews.csv
reviewsMallorca <- cbind(read_csv("data/Mallorca/reviews.csv.gz"), Ciudad=c("Mallorca"))
reviewsBarcelona <- cbind(read_csv("data/Barcelona/reviews.csv.gz"), Ciudad=c("Barcelona"))
reviewsValencia <- cbind(read_csv("data/Valencia/reviews.csv.gz"), Ciudad=c("Valencia"))
reviewsMexico <- cbind(read_csv("data/Mexico/reviews.csv.gz"), Ciudad=c("Mexico"))
reviewsBuenosAires <- cbind(read_csv("data/Buenos_Aires/reviews.csv.gz"), Ciudad=c("Buenos Aires"))
#Unimos todos los dataframes en uno único
reviews <- rbind(reviewsMallorca, reviewsBarcelona, reviewsValencia, reviewsMexico, reviewsBuenosAires)
#Guardamos los nuevos datos
write_csv(x = reviews, "data/reviewsCiudades.csv")
#calendar.csv
#...
#Posibles maneras de escribir N/A
na_strings <- c("NA", "N A", "N / A", "N/A", "N/ A", "Not Available", "NOt available")
#Recuperamos convirtiendo las posibles combinaciones N/A a NA's
listingNAs <- read_csv("data/listingsCiudades.csv", na = na_strings)
#Eliminamos las filas que tienen NAs
listingNoNAs <- na.omit(listingNAs)
#Pos si queremos contar quantos NAs hay o la media
nascantidad <- apply(X = is.na(listingNAs), MARGIN = 1, FUN = sum)
#Añadimos una nueva columna con la cantidad total de NAs en cada fila
listingNAs <- cbind(listingNAs,nascantidad)
#Ahora podemos elegir dejar las filas que tengan un número de NAs segun la condición siguiente (ahora < 3)
listings <- listingNAs[listingNAs$nascantidad < 6,]
#categorizado de cadenas de caracteres
listings$neighbourhood_cleansed<-as.factor(listings$neighbourhood_cleansed)
listings$room_type = gsub("Entire home/apt", "1", listings$room_type)
listings$room_type = gsub("Private room", "2", listings$room_type)
listings$room_type = gsub("Hotel room", "3", listings$room_type)
listings$room_type = gsub("Shared room", "4", listings$room_type)
listings$room_type = as.numeric(listings$room_type)
listings$host_response_time = gsub("within an hour", "1", listings$host_response_time)
listings$host_response_time = gsub("within a day", "24", listings$host_response_time)
listings$host_response_time = gsub("within a few hours", "6", listings$host_response_time)
listings$host_response_time = gsub("a few days or more", "72", listings$host_response_time)
listings$host_response_time = as.numeric(listings$host_response_time)
#impiado de texto y pasado a int
listings$bathrooms_text<-sub("bath","",listings$bathrooms_text)
listings$bathrooms_text<-sub("private","",listings$bathrooms_text)
listings$bathrooms_text<-sub("shared","",listings$bathrooms_text)
listings$bathrooms_text<-as.numeric(sub("s","",listings$bathrooms_text))
listings$price = gsub("\\,", "", listings$price)
listings$price = as.numeric(gsub("\\$", "", listings$price))
listings$host_response_rate = gsub("\\,", "", listings$host_response_rate)
listings$host_response_rate = as.numeric(gsub("\\%", "", listings$host_response_rate))
listings$host_acceptance_rate = gsub("\\,", "", listings$host_acceptance_rate)
listings$host_acceptance_rate = as.numeric(gsub("\\%", "", listings$host_acceptance_rate))
listings$host_since <- as.Date(listings$host_since)
listings$first_review <- as.Date(listings$first_review)
listings$last_review <- as.Date(listings$last_review)
library('plyr')
library('dplyr')
library("data.table")
host_verifications<- strsplit(listings$host_verifications,"', '")
binary <- lapply(host_verifications, function(x) {
vals <- unique(x)
x <- setNames(rep(1,length(vals)), vals);
do.call(data.frame, as.list(x))
})
# Unión de variables como columnas en un solo data.frame
result <- do.call(rbind.fill, binary)
result[is.na(result)] <- 0
listingsNoLists <- cbind(listings,result)
listingsNoLists$host_verifications <- NULL
str(listingsNoLists)
setnames(listingsNoLists, "X..email", "email")
setnames(listingsNoLists, "government_id..", "government_id")
setnames(listingsNoLists, "identity_manual..", "identity_manual")
setnames(listingsNoLists, "reviews..", "reviews")
setnames(listingsNoLists, "work_email..", "work_email")
setnames(listingsNoLists, "email", "X..email..")
listingsNoLists$X..phone <- NULL
listingsNoLists$X..phone.. <- NULL
listingsNoLists$phone.. <- NULL
listingsNoLists$manual_offline.. <- NULL
listingsNoLists$X..reviews.. <- NULL
listingsNoLists$X..identity_manual.. <- NULL
listingsNoLists$X..jumio <- NULL
listingsNoLists$photographer.. <- NULL
listingsNoLists$X..offline_government_id <- NULL
write_csv(x = listingsNoLists, "data/listingsCiudadesLimpio.csv")
knitr::opts_chunk$set(echo = TRUE)
library("data.table")
library(magrittr)
library(dplyr)
library(forcats)
#para que salga en inglés
Sys.setlocale("LC_TIME","C")
#para ordenar los plots a la hora de mostrarlo
month_names <- c("January","February","March","April","May","June","July","August","September","October","November","December")
day_names <- c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
#creamos el dataset reviews a partir de las tablas de reviews de las ciudades
reviews <- read_csv("data/reviewsCiudades.csv")
listings <- read_csv("data/listingsCiudadesLimpio.csv")
#añadimos las características necesarias
reviews$day <- weekdays(as.Date(reviews$date))
reviews$month <- month.name[month(as.Date(reviews$date))]
setnames(listings, "id", "listing_id")
reviews <- merge(reviews, listings[, c("listing_id", "neighbourhood_cleansed")], by="listing_id")
setnames(listings, "listing_id", "id")
setnames(reviews, "neighbourhood_cleansed", "zone")
#ahora montamos las tablas con la información que se pide
#count para zones y ciudades
reviews_zone <- aggregate(list(reviews=listings$number_of_reviews), by=list(zona=listings$neighbourhood_cleansed, ciudad=listings$Ciudad), FUN=sum)
reviews_city <- aggregate(list(reviews=listings$number_of_reviews), by=list(ciudad=listings$Ciudad), FUN=sum)
#order descent
reviews_zone <- reviews_zone[order(-reviews_zone$reviews),]
reviews_city <- reviews_city[order(-reviews_city$reviews),]
#count para dias y meses
reviews_day <- data.frame(table(reviews$day))
setnames(reviews_day, "Freq", "reviews")
setnames(reviews_day, "Var1", "day")
reviews_month <- data.frame(table(reviews$month))
setnames(reviews_month, "Freq", "reviews")
setnames(reviews_month, "Var1", "month")
#order descent
reviews_day <- reviews_day[order(-reviews_day$reviews),]
reviews_month <- reviews_month[order(-reviews_month$reviews),]
#algunos plots de muestra que podrían ser útiles
#plot ordenado
p <- reviews %>%
mutate(day = fct_relevel(day,day_names)) %>%
ggplot( aes(x=day, fill=Ciudad)) +
geom_bar(position = "dodge")
library("ggplot2")
#plot ordenado
p <- reviews %>%
mutate(day = fct_relevel(day,day_names)) %>%
ggplot( aes(x=day, fill=Ciudad)) +
geom_bar(position = "dodge")
p
p
#plot ordenado
p <- reviews %>%
mutate(month = fct_relevel(month,month_names)) %>%
ggplot( aes(x=month, fill=Ciudad)) +
geom_bar(position = "dodge")
p
#se observan las ciudades con temporalidad/estacionalidad
ggplot(data = reviews, aes(x = date, y = Ciudad, group = 1)) +
geom_count(alpha=0.01)+
scale_size_area(max_size = 10)
#Las tablas de lo que se pide
reviews_day
